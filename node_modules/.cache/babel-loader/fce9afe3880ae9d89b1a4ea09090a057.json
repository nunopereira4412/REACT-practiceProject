{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/project/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './app.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport withClass from '../hoc/withClass';\nimport Aux from '../hoc/Aux.js';\nimport Person from '../components/Persons/Person/Person';\nimport AuthContext from '../context/authContext';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        id: \"sdfsdf\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"whgesfdv\",\n        name: \"Mane\",\n        age: 29\n      }, {\n        id: \"wetragds\",\n        name: \"Stephanie\",\n        age: 16\n      }],\n      otherState: \"this is other state\",\n      showPersons: false,\n      showCockpit: true,\n      changeCounter: 0\n    };\n\n    this.togglePersonsHandler = () => {\n      const showPersons = this.state.showPersons;\n      this.setState({\n        showPersons: !showPersons\n      });\n    };\n\n    this.nameChangedHandler = (event, personId) => {\n      const personIndex = this.state.persons.findIndex(p => p.id === personId);\n      const person = { ...this.state.persons[personIndex]\n      }; // OR\n      // const person = Object.assign({}, ...this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState((prevState, props) => {\n        return {\n          persons: persons,\n          changeCounter: prevState.changeCounter + 1\n        };\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.loginHandler = () => {\n      this.setState({\n        authenticated: true\n      });\n    };\n\n    console.log(\"[App.js] constructor\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"[App.js] getDerivedStateFromProps\", props);\n    return state;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"[App.js] shouldComponentUpdate...\");\n    return true;\n  }\n\n  componentDidMount() {\n    console.log(\"[App.js] componentDidMount\");\n  }\n\n  componentDidUpdate(prevProp, prevState, snapshot) {\n    console.log(\"[App.js] componentDidUpdate...\");\n  }\n\n  render() {\n    console.log(\"[App.js] render\");\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    }\n\n    return (\n      /*#__PURE__*/\n      // this is some jsx\n      _jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              showCockpit: false\n            });\n          },\n          children: \"Remove Cockpit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n          value: {\n            authenticated: this.state.authenticated,\n            login: this.loginHandler\n          },\n          children: [this.state.showCockpit ? /*#__PURE__*/_jsxDEV(Cockpit, {\n            appTitle: this.props.appTitle,\n            personsLength: this.state.persons.length,\n            showPersons: this.state.showPersons,\n            clicked: this.togglePersonsHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this) : null, persons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    ); //its the same as:\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?')\n  }\n\n} // propTypes is a special propertie which i had to any js component object that react will watch out for in dev mode and give a warning if theres any incorrect props. \n// I now define which props the component uses and which type of data this component shoudl be of.\n// I can even say a prop should be a function that receives this and that argument and returns that\n\n\nPerson.propTypes = {\n  clicked: PropTypes.func,\n  changed: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number\n};\nexport default _c = withClass(App, classes.App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/project/src/containers/App.js"],"names":["React","Component","PropTypes","classes","Persons","Cockpit","withClass","Aux","Person","AuthContext","App","constructor","props","state","persons","id","name","age","otherState","showPersons","showCockpit","changeCounter","togglePersonsHandler","setState","nameChangedHandler","event","personId","personIndex","findIndex","p","person","target","value","prevState","deletePersonHandler","splice","loginHandler","authenticated","console","log","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","componentDidMount","componentDidUpdate","prevProp","snapshot","render","login","appTitle","length","propTypes","clicked","func","changed","string","number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './app.module.css';\n\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nimport withClass from '../hoc/withClass';\nimport Aux from '../hoc/Aux.js';\nimport Person from '../components/Persons/Person/Person';\n\nimport AuthContext from '../context/authContext';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"[App.js] constructor\");\n  }\n\n  state = {\n    persons: [\n      {id: \"sdfsdf\", name: \"Max\", age: 28},\n      {id: \"whgesfdv\", name: \"Mane\", age: 29},\n      {id: \"wetragds\", name: \"Stephanie\", age: 16}\n    ],\n    otherState: \"this is other state\",\n    showPersons: false,\n    showCockpit: true,\n    changeCounter: 0\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"[App.js] getDerivedStateFromProps\", props);\n    return state;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"[App.js] shouldComponentUpdate...\");\n    return true;\n  }\n\n  componentDidMount() {\n    console.log(\"[App.js] componentDidMount\" );\n  }\n\n  componentDidUpdate(prevProp, prevState, snapshot) {\n    console.log(\"[App.js] componentDidUpdate...\");\n  }\n\n  togglePersonsHandler = () => {\n    const showPersons = this.state.showPersons;\n    this.setState({ showPersons: !showPersons });\n  }\n\n  nameChangedHandler = (event, personId) => {\n    const personIndex = this.state.persons.findIndex(p => p.id === personId);\n\n    const person = {...this.state.persons[personIndex]};\n    // OR\n    // const person = Object.assign({}, ...this.state.persons[personIndex]);\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState((prevState, props) => {\n      return {\n        persons: persons,\n        changeCounter: prevState.changeCounter + 1\n      };\n    });\n  }\n\n  deletePersonHandler = (personIndex) => {     \n    const persons = [...this.state.persons];\n\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  loginHandler = () => {\n    this.setState({authenticated: true});\n  }\n\n  render() {\n    console.log(\"[App.js] render\");\n    let persons = null;\n\n    if(this.state.showPersons) { \n      persons = <Persons \n                  persons={this.state.persons}\n                  clicked={this.deletePersonHandler}\n                  changed={this.nameChangedHandler}/>\n    }\n\n    return (\n      // this is some jsx\n      <Aux>\n        <button \n          onClick={() => {\n            this.setState({showCockpit: false})\n          }}>\n          Remove Cockpit\n        </button>\n        <AuthContext.Provider value={{\n          authenticated: this.state.authenticated,\n          login: this.loginHandler\n        }}>\n          {this.state.showCockpit ? <Cockpit \n            appTitle={this.props.appTitle}\n            personsLength={this.state.persons.length}\n            showPersons={this.state.showPersons}\n            clicked={this.togglePersonsHandler}/> : null}\n          {persons}\n        </AuthContext.Provider>\n      </Aux>\n    );\n    //its the same as:\n      // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?')\n  }  \n}\n\n// propTypes is a special propertie which i had to any js component object that react will watch out for in dev mode and give a warning if theres any incorrect props. \n// I now define which props the component uses and which type of data this component shoudl be of.\n\n// I can even say a prop should be a function that receives this and that argument and returns that\nPerson.propTypes = {\n  clicked: PropTypes.func,\n  changed: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number\n};\n\nexport default withClass(App, classes.App);\n"]},"metadata":{},"sourceType":"module"}