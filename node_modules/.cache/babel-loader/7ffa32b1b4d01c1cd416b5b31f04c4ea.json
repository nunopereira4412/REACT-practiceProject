{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport Radium from 'radium';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"sdfsdf\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"whgesfdv\",\n        name: \"Mane\",\n        age: 29\n      }, {\n        id: \"wetragds\",\n        name: \"Stephanie\",\n        age: 16\n      }],\n      otherState: \"this is other state\",\n      showPersons: false\n    };\n\n    this.togglePersonsHandler = () => {\n      const showPersons = this.state.showPersons;\n      this.setState({\n        showPersons: !showPersons\n      });\n    };\n\n    this.nameChangedHandler = (event, personId) => {\n      const personIndex = this.state.persons.findIndex(p => p.id === personId);\n      const person = { ...this.state.persons[personIndex]\n      }; // OR\n      // const person = Object.assign({}, ...this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // without the slice we would be mutating the oritignal state. This may lead to unpredictable apps\n      //const persons = this.state.persons.slice();\n      // OR\n      //returns an object with the elements from the oritignal \n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n      \":hover\": {\n        backgroundColor: \"lightgreen\",\n        color: \"black\"\n      }\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, personIndex) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePersonHandler(personIndex),\n            name: person.name,\n            age: person.age // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n            // index isnt a good key cus for every render the indexes change\n            ,\n            changed: event => this.nameChangedHandler(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n      style.backgroundColor = \"red\";\n      style[\":hover\"] = {\n        backgroundColor: \"salmon\",\n        color: \"black\"\n      };\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n\n    return (\n      /*#__PURE__*/\n      // this is some jsx\n      _jsxDEV(StyledRoot, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"HI --- TEST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.join(\" \"),\n            children: \"this is rly working\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: style,\n            onClick: this.togglePersonsHandler,\n            children: \"Toggle Persons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), persons]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this) //its the same as:\n      // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?')\n\n    );\n  }\n\n}\n\nexport default _c = Radium(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/project/src/App.js"],"names":["React","Component","Person","Radium","App","state","persons","id","name","age","otherState","showPersons","togglePersonsHandler","setState","nameChangedHandler","event","personId","personIndex","findIndex","p","person","target","value","deletePersonHandler","splice","render","style","backgroundColor","color","font","border","padding","cursor","map","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport Radium from 'radium';\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      {id: \"sdfsdf\", name: \"Max\", age: 28},\n      {id: \"whgesfdv\", name: \"Mane\", age: 29},\n      {id: \"wetragds\", name: \"Stephanie\", age: 16}\n    ],\n    otherState: \"this is other state\",\n    showPersons: false\n  }\n\n  togglePersonsHandler = () => {\n    const showPersons = this.state.showPersons;\n    this.setState({ showPersons: !showPersons });\n  }\n\n  nameChangedHandler = (event, personId) => {\n    const personIndex = this.state.persons.findIndex(p => p.id === personId);\n  \n    const person = {...this.state.persons[personIndex]};\n    // OR\n    // const person = Object.assign({}, ...this.state.persons[personIndex]);\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({persons: persons});\n  }\n\n  deletePersonHandler = (personIndex) => {     \n    // without the slice we would be mutating the oritignal state. This may lead to unpredictable apps\n\n    //const persons = this.state.persons.slice();\n\n    // OR\n    //returns an object with the elements from the oritignal \n    const persons = [...this.state.persons];\n\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n      \":hover\": {\n        backgroundColor: \"lightgreen\",\n        color: \"black\"\n      }\n    };\n\n    let persons = null;\n    \n    if(this.state.showPersons) { \n      persons = (\n        <div>\n          {/* 1. map offers each element in the array asweel as its index if i want\n          2. this will in the end be an array of jsx elements but react will pull out those elements from the array and render them into the screeen */}\n          {this.state.persons.map((person, personIndex) => {\n            return (\n              <Person\n              click={() => this.deletePersonHandler(personIndex)}\n              name={person.name} \n              age={person.age} \n              // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n              // index isnt a good key cus for every render the indexes change\n              key={person.id}\n              changed={(event) => this.nameChangedHandler(event, person.id)}/>\n            )\n          })}\n        </div>\n      );\n\n      style.backgroundColor = \"red\";  \n      style[\":hover\"] = {\n        backgroundColor: \"salmon\",\n        color: \"black\"\n      };\n    }\n\n    const classes = [];\n    if(this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n    if(this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n\n    return (\n      // this is some jsx\n      <StyledRoot>\n      <div className=\"App\">\n        <h1>HI --- TEST</h1>\n        <p className={classes.join(\" \")}>this is rly working</p>\n        {/* <button onClick={() => this.switchNameHandler(\"Maximilian\")}>Switch name</button> */}\n        <button\n          style={style}\n          onClick={this.togglePersonsHandler}>Toggle Persons\n        </button>\n        {persons}\n      </div>\n      </StyledRoot>\n      //its the same as:\n        // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?')\n    );\n  }\n}\nexport default Radium(App);\n"]},"metadata":{},"sourceType":"module"}