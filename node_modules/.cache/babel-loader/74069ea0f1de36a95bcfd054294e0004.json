{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/project/src/components/Persons/Persons.js\";\nimport React from 'react';\nimport Person from './Person/Person';\n\nconst persons = props => {\n  console.log(\"[Persons.js] rendering...\");\n  return props.persons.map((person, personIndex) => /*#__PURE__*/_jsxDEV(Person, {\n    clicked: personIndex => props.clicked(personIndex),\n    name: person.name,\n    age: person.age // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n    // index isnt a good key cus for every render the indexes change\n    ,\n    changed: event => props.changed(event, person.id)\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this));\n};\n\nexport default persons;","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/project/src/components/Persons/Persons.js"],"names":["React","Person","persons","props","console","log","map","person","personIndex","clicked","name","age","event","changed","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAOF,KAAK,CAACD,OAAN,CAAcI,GAAd,CAAkB,CAACC,MAAD,EAASC,WAAT,kBACzB,QAAC,MAAD;AACI,IAAA,OAAO,EAAGA,WAAD,IAAiBL,KAAK,CAACM,OAAN,CAAcD,WAAd,CAD9B;AAEI,IAAA,IAAI,EAAED,MAAM,CAACG,IAFjB;AAGI,IAAA,GAAG,EAAEH,MAAM,CAACI,GAHhB,CAII;AACA;AALJ;AAOI,IAAA,OAAO,EAAGC,KAAD,IAAWT,KAAK,CAACU,OAAN,CAAcD,KAAd,EAAqBL,MAAM,CAACO,EAA5B;AAPxB,KAMSP,MAAM,CAACO,EANhB;AAAA;AAAA;AAAA;AAAA,UADO,CAAP;AAUH,CAZD;;AAcA,eAAeZ,OAAf","sourcesContent":["import React from 'react';\nimport Person from './Person/Person';\n\nconst persons = (props) => {\n    console.log(\"[Persons.js] rendering...\");\n    return props.persons.map((person, personIndex) => (\n    <Person\n        clicked={(personIndex) => props.clicked(personIndex)}\n        name={person.name} \n        age={person.age} \n        // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n        // index isnt a good key cus for every render the indexes change\n        key={person.id}\n        changed={(event) => props.changed(event, person.id)}/>\n    ))\n};\n\nexport default persons;\n\n"]},"metadata":{},"sourceType":"module"}