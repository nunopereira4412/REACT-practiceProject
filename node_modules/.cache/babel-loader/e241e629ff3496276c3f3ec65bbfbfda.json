{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/project/src/components/Persons/Persons.js\";\nimport React, { Component } from 'react';\nimport Person from './Person/Person';\n\nclass Persons extends Component {\n  render() {\n    console.log(\"[Persons.js] rendering...\");\n    return this.props.persons.map((person, personIndex) => /*#__PURE__*/_jsxDEV(Person, {\n      clicked: personIndex => this.props.clicked(personIndex),\n      name: person.name,\n      age: person.age // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n      // index isnt a good key cus for every render the indexes change\n      ,\n      changed: event => this.props.changed(event, person.id)\n    }, person.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this));\n  }\n\n}\n\n;\nexport default Persons;","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/project/src/components/Persons/Persons.js"],"names":["React","Component","Person","Persons","render","console","log","props","persons","map","person","personIndex","clicked","name","age","event","changed","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAASC,WAAT,kBAC9B,QAAC,MAAD;AACI,MAAA,OAAO,EAAGA,WAAD,IAAiB,KAAKJ,KAAL,CAAWK,OAAX,CAAmBD,WAAnB,CAD9B;AAEI,MAAA,IAAI,EAAED,MAAM,CAACG,IAFjB;AAGI,MAAA,GAAG,EAAEH,MAAM,CAACI,GAHhB,CAII;AACA;AALJ;AAOI,MAAA,OAAO,EAAGC,KAAD,IAAW,KAAKR,KAAL,CAAWS,OAAX,CAAmBD,KAAnB,EAA0BL,MAAM,CAACO,EAAjC;AAPxB,OAMSP,MAAM,CAACO,EANhB;AAAA;AAAA;AAAA;AAAA,YADO,CAAP;AAUH;;AAb2B;;AAc/B;AAED,eAAed,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport Person from './Person/Person';\n\nclass Persons extends Component {\n    render() {\n        console.log(\"[Persons.js] rendering...\");\n        return this.props.persons.map((person, personIndex) => (\n        <Person\n            clicked={(personIndex) => this.props.clicked(personIndex)}\n            name={person.name} \n            age={person.age} \n            // key is used by react to compare future elements with past elements and then only re-render the elements that changed - efficiency\n            // index isnt a good key cus for every render the indexes change\n            key={person.id}\n            changed={(event) => this.props.changed(event, person.id)}/>\n        ))\n    }\n};\n\nexport default Persons;\n\n"]},"metadata":{},"sourceType":"module"}